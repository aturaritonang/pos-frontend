@model XsisPos.Dto.ChangeProductDto

<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" method="post" id="form-create" name="form-create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @{
                if (!String.IsNullOrEmpty(ViewBag.Saved))
                {
                    <div class="text-success">@ViewBag.Saved</div>
                }
                if (!String.IsNullOrEmpty(ViewBag.Error))
                {
                    <div class="text-danger">@ViewBag.Error</div>
                }
            }
            <div class="form-group" hidden>
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" readonly class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Category</label>
                @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.CategoryList, "Select Category",
                         @String.IsNullOrEmpty(ViewBag.Saved) ?
                         (object)new { @class = "form-control" } :
                         (object)new { @class = "form-control", disabled = "disabled" }
                         )
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Initial" class="control-label"></label>
                <input asp-for="Initial" class="form-control" readonly=@(!String.IsNullOrEmpty(ViewBag.Saved)) />
                <span asp-validation-for="Initial" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" readonly=@(!String.IsNullOrEmpty(ViewBag.Saved)) />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" readonly=@(!String.IsNullOrEmpty(ViewBag.Saved)) />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" readonly=@(!String.IsNullOrEmpty(ViewBag.Saved)) /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <div class="form-group">
                @{
                    if (String.IsNullOrEmpty(ViewBag.Saved))
                    {
                        <input type="submit" value="Create" class="btn btn-primary" />
                    }
                }
                <input type="button" value="Close" class="btn btn-secondary" data-bs-dismiss="modal" />
            </div>
        </form>
    </div>
</div>

@* <div>
    <a asp-action="Index">Back to List</a>
</div> *@

<script type="text/javascript">
    $("#form-create").submit(function () {
        var dataForm = new FormData($("#form-create")[0]);
        $.ajax({
            url: this.action,
            type: this.method,
            data: dataForm,
            processData: false,
            contentType: false,
            success: function (result) {
                if (result) {
                    $(".modal-body").html(result);
                }
                GetList()
            }
        })
        return false;
    });
</script>

@* @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
} *@
